//
//  PermissionsPresenter.swift
//  vimojo
//
//  Created Jesus Huerta on 15/03/2018.
//  Copyright © 2018 Videona. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Permission

class PermissionsPresenter: PermissionsPresenterProtocol {

    weak private var view: PermissionsViewProtocol?
    var interactor: PermissionsInteractorProtocol?
    private let router: PermissionsWireframeProtocol

    init(interface: PermissionsViewProtocol, interactor: PermissionsInteractorProtocol?, router: PermissionsWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func askForCameraPermissionIfNeeded() {
        let cameraPermission: Permission = .camera
        
        cameraPermission.request { status in
            switch status {
            case .authorized:
                self.askForMicrophonePermissionIfNeeded()
            case .denied, .disabled, .notDetermined:
                self.askForCameraPermissionIfNeeded()
            }
        }
    }
    
    func askForMicrophonePermissionIfNeeded() {
        let microphonePermission: Permission = .microphone
        
        microphonePermission.request { status in
            switch status {
            case .authorized:
                self.askForGalleryPermissionIfNeeded()
            case .denied, .disabled, .notDetermined:
                self.askForMicrophonePermissionIfNeeded()
            }
        }
    }
    
    func askForGalleryPermissionIfNeeded() {
        let photoGalleryPermission: Permission = .photos
        
        photoGalleryPermission.request { status in
            switch status {
            case .authorized:
                self.router.goToRecorderScreen()
            case .denied, .disabled, .notDetermined:
                self.askForGalleryPermissionIfNeeded()
            }
        }
    }

}
