//
//  PermissionsRouter.swift
//  vimojo
//
//  Created Jesus Huerta on 15/03/2018.
//  Copyright © 2018 Videona. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PermissionsRouter: PermissionsWireframeProtocol {

    weak var viewController: UIViewController?
    weak var recordWireFrame: RecordWireframe?
    weak var drawerWireframe: RecordDrawerWireframe?


    static func createModule(recordWireFrame: RecordWireframe,
                             drawerWireframe: RecordDrawerWireframe) -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = PermissionsViewController(nibName: nil, bundle: nil)
        let interactor = PermissionsInteractor()
        let router = PermissionsRouter()
        let presenter = PermissionsPresenter(interface: view, interactor: interactor, router: router)
        
        router.recordWireFrame = recordWireFrame
        router.drawerWireframe = drawerWireframe
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }

    func goToRecorderScreen() {
        if  let recordController = recordWireFrame?.RecordViewControllerFromStoryboard(),
            let viewControllerToPresent = drawerWireframe?.getDrawerController(viewController: recordController)
        {
            viewControllerToPresent.forceOrientation(orientation: .lanscapeOnly)
            viewController?.present(viewControllerToPresent, animated: true, completion: nil)
        }
    }
}
