//
//  PurchasePresenter.swift
//  vimojo
//
//  Created Alejandro Arjonilla Garcia on 15/12/17.
//  Copyright © 2017 Videona. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import StoreKit

struct ProductViewModel {
    let title: String?
    let subtitle: String?
    let buttonText: String?
    let buyAction: Action
    
    init(with product: SKProduct, action: @escaping Action) {
        self.title = product.localizedTitle
        self.subtitle = product.localizedDescription
        self.buttonText =
        "Compra ahora por: \(product.price)\(String(describing: product.priceLocale.currencySymbol)))"
        self.buyAction = action
    }
}
class PurchasePresenter: PurchasePresenterProtocol {

    weak private var view: PurchaseViewProtocol?
    var interactor: PurchaseInteractorProtocol?
    private let router: PurchaseWireframeProtocol

    init(interface: PurchaseViewProtocol, interactor: PurchaseInteractorProtocol?, router: PurchaseWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    func loadProducts() {
        interactor?.loadProducts(response: { (response) in
            switch response {
            case .error(let error): print("Error")
            case .success(let products):
                self.view?.products = products.map({ product in
                    ProductViewModel(with: product, action: {
                    self.interactor?.buyProduct(product: product)
                }) })
            }
        })
    }
}
